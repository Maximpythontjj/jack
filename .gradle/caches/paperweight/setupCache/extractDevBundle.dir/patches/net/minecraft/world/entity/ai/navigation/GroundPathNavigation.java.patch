--- a/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
+++ b/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
@@ -42,7 +42,7 @@
     }
 
     @Override
-    public Path createPath(BlockPos target, int distance) {
+    public Path createPath(BlockPos target, @javax.annotation.Nullable Entity entity, int distance) { // Paper - EntityPathfindEvent
         LevelChunk levelChunk = this.level
             .getChunkSource()
             .getChunkNow(SectionPos.blockToSectionCoord(target.getX()), SectionPos.blockToSectionCoord(target.getZ()));
@@ -57,7 +57,7 @@
                 }
 
                 if (mutableBlockPos.getY() > this.level.getMinY()) {
-                    return super.createPath(mutableBlockPos.above(), distance);
+                    return super.createPath(mutableBlockPos.above(), entity, distance); // Paper - EntityPathfindEvent
                 }
 
                 mutableBlockPos.setY(target.getY() + 1);
@@ -70,7 +70,7 @@
             }
 
             if (!levelChunk.getBlockState(target).isSolid()) {
-                return super.createPath(target, distance);
+                return super.createPath(target, entity, distance); // Paper - EntityPathfindEvent
             } else {
                 BlockPos.MutableBlockPos mutableBlockPos2 = target.mutable().move(Direction.UP);
 
@@ -78,14 +78,14 @@
                     mutableBlockPos2.move(Direction.UP);
                 }
 
-                return super.createPath(mutableBlockPos2.immutable(), distance);
+                return super.createPath(mutableBlockPos2.immutable(), entity, distance);  // Paper - EntityPathfindEvent
             }
         }
     }
 
     @Override
     public Path createPath(Entity entity, int distance) {
-        return this.createPath(entity.blockPosition(), distance);
+        return this.createPath(entity.blockPosition(), entity, distance); // Paper - EntityPathfindEvent
     }
 
     private int getSurfaceY() {
