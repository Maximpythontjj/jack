--- a/net/minecraft/world/item/consume_effects/RemoveStatusEffectsConsumeEffect.java
+++ b/net/minecraft/world/item/consume_effects/RemoveStatusEffectsConsumeEffect.java
@@ -2,6 +2,7 @@
 
 import com.mojang.serialization.MapCodec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
+import java.util.Iterator;
 import net.minecraft.core.Holder;
 import net.minecraft.core.HolderSet;
 import net.minecraft.core.RegistryCodecs;
@@ -13,20 +14,19 @@
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
+// CraftBukkit start
+import org.bukkit.event.entity.EntityPotionEffectEvent;
+// CraftBukkit end
 
 public record RemoveStatusEffectsConsumeEffect(HolderSet<MobEffect> effects) implements ConsumeEffect {
-    public static final MapCodec<RemoveStatusEffectsConsumeEffect> CODEC = RecordCodecBuilder.mapCodec(
-        instance -> instance.group(
-                    RegistryCodecs.homogeneousList(Registries.MOB_EFFECT).fieldOf("effects").forGetter(RemoveStatusEffectsConsumeEffect::effects)
-                )
-                .apply(instance, RemoveStatusEffectsConsumeEffect::new)
-    );
-    public static final StreamCodec<RegistryFriendlyByteBuf, RemoveStatusEffectsConsumeEffect> STREAM_CODEC = StreamCodec.composite(
-        ByteBufCodecs.holderSet(Registries.MOB_EFFECT), RemoveStatusEffectsConsumeEffect::effects, RemoveStatusEffectsConsumeEffect::new
-    );
+
+    public static final MapCodec<RemoveStatusEffectsConsumeEffect> CODEC = RecordCodecBuilder.mapCodec((instance) -> {
+        return instance.group(RegistryCodecs.homogeneousList(Registries.MOB_EFFECT).fieldOf("effects").forGetter(RemoveStatusEffectsConsumeEffect::effects)).apply(instance, RemoveStatusEffectsConsumeEffect::new);
+    });
+    public static final StreamCodec<RegistryFriendlyByteBuf, RemoveStatusEffectsConsumeEffect> STREAM_CODEC = StreamCodec.composite(ByteBufCodecs.holderSet(Registries.MOB_EFFECT), RemoveStatusEffectsConsumeEffect::effects, RemoveStatusEffectsConsumeEffect::new);
 
     public RemoveStatusEffectsConsumeEffect(Holder<MobEffect> effect) {
-        this(HolderSet.direct(effect));
+        this((HolderSet) HolderSet.direct(effect));
     }
 
     @Override
@@ -35,15 +35,18 @@
     }
 
     @Override
-    public boolean apply(Level world, ItemStack stack, LivingEntity user) {
-        boolean bl = false;
+    public boolean apply(Level world, ItemStack itemstack, LivingEntity entityliving, EntityPotionEffectEvent.Cause cause) { // CraftBukkit
+        boolean flag = false;
+        Iterator iterator = this.effects.iterator();
 
-        for (Holder<MobEffect> holder : this.effects) {
-            if (user.removeEffect(holder)) {
-                bl = true;
+        while (iterator.hasNext()) {
+            Holder<MobEffect> holder = (Holder) iterator.next();
+
+            if (entityliving.removeEffect(holder, cause)) { // CraftBukkit
+                flag = true;
             }
         }
 
-        return bl;
+        return flag;
     }
 }
