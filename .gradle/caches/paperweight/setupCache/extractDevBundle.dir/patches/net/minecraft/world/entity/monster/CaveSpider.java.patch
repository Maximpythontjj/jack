--- a/net/minecraft/world/entity/monster/CaveSpider.java
+++ b/net/minecraft/world/entity/monster/CaveSpider.java
@@ -18,27 +18,29 @@
 import net.minecraft.world.phys.Vec3;
 
 public class CaveSpider extends Spider {
+
     public CaveSpider(EntityType<? extends CaveSpider> type, Level world) {
         super(type, world);
     }
 
     public static AttributeSupplier.Builder createCaveSpider() {
-        return Spider.createAttributes().add(Attributes.MAX_HEALTH, 12.0);
+        return Spider.createAttributes().add(Attributes.MAX_HEALTH, 12.0D);
     }
 
     @Override
     public boolean doHurtTarget(ServerLevel world, Entity target) {
         if (super.doHurtTarget(world, target)) {
             if (target instanceof LivingEntity) {
-                int i = 0;
+                byte b0 = 0;
+
                 if (this.level().getDifficulty() == Difficulty.NORMAL) {
-                    i = 7;
+                    b0 = 7;
                 } else if (this.level().getDifficulty() == Difficulty.HARD) {
-                    i = 15;
+                    b0 = 15;
                 }
 
-                if (i > 0) {
-                    ((LivingEntity)target).addEffect(new MobEffectInstance(MobEffects.POISON, i * 20, 0), this);
+                if (b0 > 0) {
+                    ((LivingEntity) target).addEffect(new MobEffectInstance(MobEffects.POISON, b0 * 20, 0), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
                 }
             }
 
@@ -50,14 +52,12 @@
 
     @Nullable
     @Override
-    public SpawnGroupData finalizeSpawn(
-        ServerLevelAccessor world, DifficultyInstance difficulty, EntitySpawnReason spawnReason, @Nullable SpawnGroupData entityData
-    ) {
+    public SpawnGroupData finalizeSpawn(ServerLevelAccessor world, DifficultyInstance difficulty, EntitySpawnReason spawnReason, @Nullable SpawnGroupData entityData) {
         return entityData;
     }
 
     @Override
     public Vec3 getVehicleAttachmentPoint(Entity vehicle) {
-        return vehicle.getBbWidth() <= this.getBbWidth() ? new Vec3(0.0, 0.21875 * (double)this.getScale(), 0.0) : super.getVehicleAttachmentPoint(vehicle);
+        return vehicle.getBbWidth() <= this.getBbWidth() ? new Vec3(0.0D, 0.21875D * (double) this.getScale(), 0.0D) : super.getVehicleAttachmentPoint(vehicle);
     }
 }
