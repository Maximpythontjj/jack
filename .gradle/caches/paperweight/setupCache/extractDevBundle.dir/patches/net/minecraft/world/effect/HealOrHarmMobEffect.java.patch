--- a/net/minecraft/world/effect/HealOrHarmMobEffect.java
+++ b/net/minecraft/world/effect/HealOrHarmMobEffect.java
@@ -6,6 +6,7 @@
 import net.minecraft.world.entity.LivingEntity;
 
 class HealOrHarmMobEffect extends InstantenousMobEffect {
+
     private final boolean isHarm;
 
     public HealOrHarmMobEffect(MobEffectCategory category, int color, boolean damage) {
@@ -16,28 +17,29 @@
     @Override
     public boolean applyEffectTick(ServerLevel world, LivingEntity entity, int amplifier) {
         if (this.isHarm == entity.isInvertedHealAndHarm()) {
-            entity.heal((float)Math.max(4 << amplifier, 0));
+            entity.heal((float) Math.max(4 << amplifier, 0), org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.MAGIC); // CraftBukkit
         } else {
-            entity.hurtServer(world, entity.damageSources().magic(), (float)(6 << amplifier));
+            entity.hurtServer(world, entity.damageSources().magic(), (float) (6 << amplifier));
         }
 
         return true;
     }
 
     @Override
-    public void applyInstantenousEffect(
-        ServerLevel world, @Nullable Entity effectEntity, @Nullable Entity attacker, LivingEntity target, int amplifier, double proximity
-    ) {
+    public void applyInstantenousEffect(ServerLevel world, @Nullable Entity effectEntity, @Nullable Entity attacker, LivingEntity target, int amplifier, double proximity) {
+        int j;
+
         if (this.isHarm == target.isInvertedHealAndHarm()) {
-            int i = (int)(proximity * (double)(4 << amplifier) + 0.5);
-            target.heal((float)i);
+            j = (int) (proximity * (double) (4 << amplifier) + 0.5D);
+            target.heal((float) j, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.MAGIC); // CraftBukkit
         } else {
-            int j = (int)(proximity * (double)(6 << amplifier) + 0.5);
+            j = (int) (proximity * (double) (6 << amplifier) + 0.5D);
             if (effectEntity == null) {
-                target.hurtServer(world, target.damageSources().magic(), (float)j);
+                target.hurtServer(world, target.damageSources().magic(), (float) j);
             } else {
-                target.hurtServer(world, target.damageSources().indirectMagic(effectEntity, attacker), (float)j);
+                target.hurtServer(world, target.damageSources().indirectMagic(effectEntity, attacker), (float) j);
             }
         }
+
     }
 }
